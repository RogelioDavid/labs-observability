apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-observability
  namespace: "applications"  
  labels:
    app: hello-observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-observability
  template:
    metadata:
      labels:
        app: hello-observability
      annotations:
        sidecar.opentelemetry.io/inject: "opentelemetry-collector/otel-collector"
        instrumentation.opentelemetry.io/inject-java: "opentelemetry-collector/auto-instrumentation"
 #       instrumentation.opentelemetry.io/container-names: "app"            
    spec:
      containers:
        - name: hello-observability
          image: rmendoza/hello-observability-demo
          imagePullPolicy: Always
          ports:
          - name: out-http
            containerPort: 8080
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            failureThreshold: 50
            periodSeconds: 5
            initialDelaySeconds: 40
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "hello-observability"
  namespace: "applications"
  labels:
    app: "hello-observability"
spec:
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 8080
  selector:
    app: "hello-observability"
  type: "ClusterIP"         
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "lb-hello-observability"
  namespace: "applications"
  labels:
    app: "hello-observability"
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8080
  selector:
    app: "hello-observability"
  type: "LoadBalancer"
  loadBalancerIP: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms-service-app-ms2
  namespace: "applications"  
  labels:
    app: ms-service-app-ms2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ms-service-app-ms2
  template:
    metadata:
      labels:
        app: ms-service-app-ms2
      annotations:
        sidecar.opentelemetry.io/inject: "opentelemetry-collector/otel-collector"
        instrumentation.opentelemetry.io/inject-java: "opentelemetry-collector/auto-instrumentation"
#        instrumentation.opentelemetry.io/container-names: "app"             
    spec:
      containers:
        - name: ms-service-app-ms2
          image: rmendoza/ms-service-app-ms2-demo
          imagePullPolicy: Always
          ports:
          - name: out-http
            containerPort: 8082
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8082
            failureThreshold: 50
            periodSeconds: 5
            initialDelaySeconds: 40
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "ms-service-app-ms2"
  namespace: "applications"
  labels:
    app: "ms-service-app-ms2"
spec:
  ports:
  - protocol: "TCP"
    port: 8082
    targetPort: 8082
  selector:
    app: "ms-service-app-ms2"
  type: "ClusterIP"               
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms-service-app-ms1
  namespace: "applications"  
  labels:
    app: ms-service-app-ms1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ms-service-app-ms1
  template:
    metadata:
      labels:
        app: ms-service-app-ms1
      annotations:
        sidecar.opentelemetry.io/inject: "opentelemetry-collector/otel-collector"
        instrumentation.opentelemetry.io/inject-java: "opentelemetry-collector/auto-instrumentation"
#        instrumentation.opentelemetry.io/container-names: "app"             

    spec:
      containers:
        - name: ms-service-app-ms1
          image: rmendoza/ms-service-app-ms1-demo
          imagePullPolicy: Always
          ports:
          - name: out-http
            containerPort: 8081
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8081
            failureThreshold: 50
            periodSeconds: 5
            initialDelaySeconds: 40
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "ms-service-app-ms1"
  namespace: "applications"
  labels:
    app: "ms-service-app-ms1"
spec:
  ports:
  - protocol: "TCP"
    port: 8081
    targetPort: 8081
  selector:
    app: "ms-service-app-ms1"
  type: "ClusterIP"               
